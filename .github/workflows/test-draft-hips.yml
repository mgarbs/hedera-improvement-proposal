name: Update Draft HIPs Data

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:        # Allows manual triggering

jobs:
  update-draft-hips:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create Test Script
        run: |
          mkdir -p _data
          cat << 'EOF' > fetch-draft-hips.js
          const https = require('https');

          // Define comprehensive query to get all necessary data
          const query = `
            query { 
              repository(name: "hedera-improvement-proposal", owner: "hashgraph") {
                pullRequests(first: 100, orderBy: {field: CREATED_AT, direction: DESC}, states: [OPEN]) {
                  totalCount
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                  nodes {
                    title
                    number
                    url
                    headRefOid
                    files(first: 100) {
                      totalCount
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                      edges {
                        node {
                          path
                          additions
                          deletions
                        }
                      }
                    }
                    author {
                      login
                    }
                    labels(first: 10) {
                      nodes {
                        name
                      }
                    }
                    createdAt
                    updatedAt
                  }
                }
              }
            }
          `;

          const options = {
            hostname: 'api.github.com',
            path: '/graphql',
            method: 'POST',
            headers: {
              'Authorization': `Bearer ${process.env.GITHUB_TOKEN}`,
              'Content-Type': 'application/json',
              'User-Agent': 'Node.js'
            }
          };

          const req = https.request(options, (res) => {
            let data = '';
            
            res.on('data', (chunk) => {
              data += chunk;
            });
            
            res.on('end', async () => {
              const result = JSON.parse(data);
              if (result.errors) {
                console.error('GraphQL errors:', result.errors);
                process.exit(1);
              }

              const prs = result.data.repository.pullRequests;
              
              // Detailed logging
              console.log('\n=== Query Results Analysis ===');
              console.log('Total PRs available:', prs.totalCount);
              console.log('PRs fetched:', prs.nodes.length);
              console.log('Has more PRs:', prs.pageInfo.hasNextPage);
              console.log('\nPR Details:');
              prs.nodes.forEach(pr => {
                console.log(`\nPR #${pr.number}:`);
                console.log('- Title:', pr.title);
                console.log('- Files count:', pr.files.edges.length);
                console.log('- MD files:', pr.files.edges.filter(e => e.node.path.endsWith('.md')).length);
                console.log('- Has more files:', pr.files.pageInfo.hasNextPage);
                console.log('- Created:', pr.createdAt);
                console.log('- Updated:', pr.updatedAt);
              });

              // Write detailed data to file
              const fs = require('fs');
              fs.writeFileSync('_data/draft_hips.json', JSON.stringify(result.data.repository.pullRequests.nodes, null, 2));
              
              // Write analysis to separate file
              const analysis = {
                timestamp: new Date().toISOString(),
                totalPRs: prs.totalCount,
                fetchedPRs: prs.nodes.length,
                hasMorePRs: prs.pageInfo.hasNextPage,
                prDetails: prs.nodes.map(pr => ({
                  number: pr.number,
                  title: pr.title,
                  fileCount: pr.files.edges.length,
                  mdFileCount: pr.files.edges.filter(e => e.node.path.endsWith('.md')).length,
                  hasMoreFiles: pr.files.pageInfo.hasNextPage,
                  created: pr.createdAt,
                  updated: pr.updatedAt
                }))
              };
              fs.writeFileSync('_data/analysis.json', JSON.stringify(analysis, null, 2));
            });
          });

          req.on('error', (error) => {
            console.error('Error:', error);
            process.exit(1);
          });

          req.write(JSON.stringify({ query }));
          req.end();
          EOF

      - name: Run Script
        run: node fetch-draft-hips.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add _data/draft_hips.json _data/analysis.json
          git commit -m "Update draft HIPs data with analysis [skip ci]"
          git push origin main